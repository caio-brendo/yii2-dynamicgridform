class NormalColumn extends TextColumn{input;constructor(t){super(t),this.id=t.id,this.input=$("#"+this.id)}get inputId(){return this.input.attr("id")}get elementInput(){return this.input.get(0)}async renderContent(t,e){const n=InputFactory.getInstance(this.input,{baseName:this.templateInputName,index:e,reference:this.inputId});return`<td ${this.cellOptions}>${await this.getText(n)+await this.getHiddenInput(n)}</td>`}async getText(t){return this.textOnInsert?"function"==typeof this.textOnInsert?this.textOnInsert(this.elementInput):this.textOnInsert:t.getValueGrid()}async getHiddenInput(t){if(this.valueOnInsert){let e="function"==typeof this.valueOnInsert?this.valueOnInsert(this.elementInput):this.valueOnInsert;e=Array.isArray(e)?Array.isArray(e):[e];const n=[];return e.forEach(t=>{n.push({reference:this.inputId,value:t})}),InputHelper.getHiddenInput(this.templateInputName,n,t.index)}return await t.getInputHidden()}}