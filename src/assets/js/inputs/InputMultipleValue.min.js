class InputMultipleValue extends BaseInput{async getValue(){return this.input.val()}getValueGrid(){const e=[];return this.input.find("option:selected").each((t,n)=>{e.push($(n).text())}),e.join(", ")}async getInputHidden(){if(!this.hasReference())throw new Error("To use this method must be informed the reference.");if(0===await this.getValue().length)return`<input type="hidden" class="dgf-reorder" name="${this.getNewNameInput()}" value="" data-reference="${this.reference}">`;let e=[];for(const t of await this.getValue())e.push(`<input type="hidden" class="dgf-reorder" name="${this.getNewNameInput()}" value="${await t}" data-reference="${this.reference}">`);return e.join("")}getNewNameInput(){if(!this.hasBaseName())throw new Error("To use this method must be informed the base name.");if(!this.hasIndex())throw new Error("To use this method must be informed the index.");return this.baseName.replace("<@>",this.index)+"[]"}setValue(e){this.input.val(this.input.val().concat(e))}}